#!/bin/bash

# Setup script for Terraform backend with OCI Object Storage
# This script helps configure the backend after the bucket is created

set -e

echo "Setting up Terraform backend with OCI Object Storage..."

# Check if required environment variables are set
if [ -z "$TF_VAR_tenancy_ocid" ]; then
    echo "Error: TF_VAR_tenancy_ocid environment variable is not set"
    exit 1
fi

if [ -z "$TF_VAR_ssh_public_key" ]; then
    echo "Error: TF_VAR_ssh_public_key environment variable is not set"
    exit 1
fi

# First, apply only the bucket configuration to create the state bucket
echo "Creating OCI bucket for Terraform state..."
terraform init
terraform apply -target=oci_objectstorage_bucket.terraform_state

# Get the outputs
BUCKET_NAME=$(terraform output -raw terraform_state_bucket_name)
BUCKET_NAMESPACE=$(terraform output -raw terraform_state_bucket_namespace)

# Extract region from URL - try multiple patterns to handle different region formats
BUCKET_URL=$(terraform output -raw terraform_state_bucket_url)
REGION=$(echo "$BUCKET_URL" | sed 's/.*objectstorage\.//; s/\.oraclecloud\.com.*//')

echo "Bucket created: $BUCKET_NAME"
echo "Namespace: $BUCKET_NAMESPACE"
echo "Region: $REGION"
echo "Bucket URL: $BUCKET_URL"

# Backup the original backend.tf if it exists
if [ -f "backend.tf" ]; then
    echo "Backing up original backend.tf to backend.tf.backup"
    cp backend.tf backend.tf.backup
fi

# Update backend.tf with the proper OCI backend configuration
echo "Updating backend.tf with the OCI backend configuration..."
cat > backend.tf << EOF
# Backend configuration for OCI Object Storage
# This file was automatically generated by setup_backend.sh
# 
# Bucket: $BUCKET_NAME
# Namespace: $BUCKET_NAMESPACE
# Region: $REGION

terraform {
  backend "oci" {
    bucket = "$BUCKET_NAME"
    namespace = "$BUCKET_NAMESPACE"
    region = "$REGION"
    key = "terraform.tfstate"
  }
}
EOF

echo "Backend configuration updated in backend.tf"
echo ""
echo "To use the remote state backend:"
echo "1. Run: terraform init -migrate-state"
echo "2. Run: terraform apply"
echo ""
echo "Note: Make sure you have proper OCI authentication configured (API key, config file, etc.)" 